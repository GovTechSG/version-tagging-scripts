#!/bin/sh
ERRORS=0;
./utils/branch_setup > /dev/null;

git checkout _production > /dev/null;
PRODUCTION_BRANCH=$(./get-branch);
if [[ $PRODUCTION_BRANCH = "_production" ]]; then
  printf " : SUCCESSFUL\n";
else
  printf ": FAILED\n";
  ((ERRORS++));
fi;

git checkout _staging > /dev/null;
STAGING_BRANCH=$(./get-branch);
if [[ $STAGING_BRANCH = "_staging" ]]; then
  printf " : SUCCESSFUL\n";
else
  printf ": FAILED\n";
  ((ERRORS++));
fi;

git checkout _uat > /dev/null;
UAT_BRANCH=$(./get-branch);
if [[ $UAT_BRANCH = "_uat" ]]; then
  printf " : SUCCESSFUL\n";
else
  printf ": FAILED\n";
  ((ERRORS++));
fi;

git checkout _qa > /dev/null;
QA_BRANCH=$(./get-branch);
if [[ $QA_BRANCH = "_qa" ]]; then
  printf " : SUCCESSFUL\n";
else
  printf ": FAILED\n";
  ((ERRORS++));
fi;

git checkout _ci > /dev/null;
CI_BRANCH=$(./get-branch);
if [[ $CI_BRANCH = "_ci" ]]; then
  printf " : SUCCESSFUL\n";
else
  printf ": FAILED\n";
  ((ERRORS++));
fi;

git checkout _dev > /dev/null;
DEV_BRANCH=$(./get-branch);
if [[ $DEV_BRANCH = "_dev" ]]; then
  printf " : SUCCESSFUL\n";
else
  printf ": FAILED\n";
  ((ERRORS++));
fi;

./utils/branch_teardown > /dev/null;

[[ $ERRORS > 0 ]] && EXIT_CODE=1 || EXIT_CODE=0;
exit $EXIT_CODE;